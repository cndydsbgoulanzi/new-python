#! /usr/bin/env python
#除零屏蔽机制
class MuffledCalculator:
    muffled = False
    def calc(self, expr):
        try:
            return eval(expr)
        except ZeroDivisionError:
            if self.muffled:
                print 'Division by zero is illegal!'
            else:
                raise

#用一个块捕捉两个异常
try:
    x = input('Enter the first number: ')
    y = input('Enter the second number: ')

    print x/y
except (ZeroDivisionError, TypeError, NameError):
    print 'Your numbers were bogus...'

#在except语句中访问异常对象本身
try:
    x = input('Enter the first number: ')
    y = input('Enter the second number: ')

    print x/y
except (ZeroDivisionError, TypeError），e:
    print e

#真正的全捕捉
try:
    x = input('Enter the first number: ')
    y = input('Enter the second number: ')

    print x/y
except：
    print 'Something wrong hapend...'

#使用else达到循环作用
try:
    x = input('Enter the first number: ')
    y = input('Enter the second number: ')
    value = x/y
    print 'x/y is', value
except：
    print 'Invalid input. Please try again.'
#except Exception,e:
#    print 'Invalid input:',e
#    print 'Please try again.'
#上面可以看看异常是不是Exception的子类
else:
    break

#使用if
def describePerson(person):
    print 'Description of', person['name']
    print 'Age:', person['age']
    if 'occupation' in person:
        print 'Occupaion:', person['occupation']
#这样会两次查找‘occupation'键，用下面方法解决
#    try:
#        print 'Occupation: ' + person['occupation']
#    except KeyError: pass
